#!/usr/bin/env zsh

# ──────────────────────────────────────────────────────────────────────
# Dotfiles executable
#
# This is the main entry point for the dotfiles executable.
#
# Usage:
#   dotfiles [command]
#
# Commands:
#   install  Install dotfiles
#   update   Update dotfiles
#   doctor   Check dotfiles installation
#   help     Show this help message
#   quit     Exit the script
#
# ──────────────────────────────────────────────────────────────────────

# Fail fast, fail loud
set -euo pipefail 2>/dev/null || set -euo
(setopt PIPE_FAIL 2>/dev/null || true)

# --- Resolve repo root (handling symlinks correctly)
if [[ -L "$0" ]]; then
    # Script is being run through a symlink
    SYMLINK_PATH="$(readlink "$0")"
    if [[ "$SYMLINK_PATH" = /* ]]; then
        # Absolute path in symlink
        ROOT_DIR="${SYMLINK_PATH:h}"
    else
        # Relative path in symlink
        ROOT_DIR="${0:h}/${SYMLINK_PATH:h}"
    fi
else
    # Script is being run directly
    ROOT_DIR="${0:A:h}"
fi
LIB_DIR="$ROOT_DIR/lib/"

# --- Helper functions
run() {
    if [[ -f "$LIB_DIR/$@" ]]; then
        source "$LIB_DIR/$@"
    else
        die "Unknown command: $@"
    fi
}

die() {
    gum style --foreground 196 --bold "❌ $*"
    return 1
}

log_success() {
    gum style --foreground 76 "✅ $1"
}

log_warning() {
    gum style --foreground 220 "⚠️ $1"
}

log_error() {
    gum style --foreground 196 "❌ $1"
}

ensure_group() {
    local group="$1"
    if ! dseditgroup -o read "$group" &>/dev/null; then
        echo "Creating group: $group"
        sudo dseditgroup -o create "$group"
    else
        echo "Group $group already exists"
    fi

    echo "Adding $USER to $group"
    sudo dseditgroup -o edit -a "$USER" -t user "$group"
}

# --- Ensure Homebrew exists (only needed on a virgin Mac)
if ! command -v brew >/dev/null; then
    echo "🛠️ Installing Homebrew..."

    # Run the Homebrew installer non-interactively without prompting for passwords
    sudo -v && NONINTERACTIVE=1 /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

    # Add Homebrew to path for the current script
    eval "$(/opt/homebrew/bin/brew shellenv)"
fi

# --- Ensure gum exists for CLI experience
if ! command -v gum >/dev/null; then
    echo "✨ Installing gum for interactive prompts"
    brew install gum
fi

# --- No args -> interactive menu (gum)
if (( $# == 0 )); then
    local choice
    choice=$(gum choose --header "What do you want to do?" install update doctor help quit)
    [[ $choice == quit ]] && return 0
    run $choice
    return
fi

# --- Args present -> direct dispatch
subcmd=$1; shift
run $subcmd
